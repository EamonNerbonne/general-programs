//------------------------------------------------------------------------------
// <auto-generated>
//    This code was generated from a template.
//
//    Manual changes to this file may cause unexpected behavior in your application.
//    Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Data.Objects;
using System.Data.Objects.DataClasses;
using System.Data.EntityClient;
using System.ComponentModel;
using System.Xml.Serialization;
using System.Runtime.Serialization;

[assembly: EdmSchemaAttribute()]
#region EDM Relationship Metadata

[assembly: EdmRelationshipAttribute("lastFMcacheModel", "FK_Artist_0", "TopTracksList", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(LastFMentityModel.TopTracksList), "Artist", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(LastFMentityModel.Artist))]
[assembly: EdmRelationshipAttribute("lastFMcacheModel", "FK_Artist_1", "SimilarArtistList", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(LastFMentityModel.SimilarArtistList), "Artist", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(LastFMentityModel.Artist))]
[assembly: EdmRelationshipAttribute("lastFMcacheModel", "FK_Artist_2", "Artist", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(LastFMentityModel.Artist), "Artist1", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(LastFMentityModel.Artist))]
[assembly: EdmRelationshipAttribute("lastFMcacheModel", "FK_SimilarArtist_1", "Artist", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(LastFMentityModel.Artist), "SimilarArtist", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(LastFMentityModel.SimilarArtist))]
[assembly: EdmRelationshipAttribute("lastFMcacheModel", "FK_SimilarArtistList_0", "Artist", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(LastFMentityModel.Artist), "SimilarArtistList", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(LastFMentityModel.SimilarArtistList))]
[assembly: EdmRelationshipAttribute("lastFMcacheModel", "FK_TopTracksList_0", "Artist", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(LastFMentityModel.Artist), "TopTracksList", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(LastFMentityModel.TopTracksList))]
[assembly: EdmRelationshipAttribute("lastFMcacheModel", "FK_Track_1", "Artist", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(LastFMentityModel.Artist), "Track", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(LastFMentityModel.Track))]
[assembly: EdmRelationshipAttribute("lastFMcacheModel", "FK_SimilarArtist_0", "SimilarArtistList", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(LastFMentityModel.SimilarArtistList), "SimilarArtist", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(LastFMentityModel.SimilarArtist))]
[assembly: EdmRelationshipAttribute("lastFMcacheModel", "FK_SimilarTrack_0", "Track", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(LastFMentityModel.Track), "SimilarTrack", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(LastFMentityModel.SimilarTrack))]
[assembly: EdmRelationshipAttribute("lastFMcacheModel", "FK_SimilarTrack_1", "SimilarTrackList", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(LastFMentityModel.SimilarTrackList), "SimilarTrack", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(LastFMentityModel.SimilarTrack))]
[assembly: EdmRelationshipAttribute("lastFMcacheModel", "FK_SimilarTrackList_0", "Track", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(LastFMentityModel.Track), "SimilarTrackList", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(LastFMentityModel.SimilarTrackList))]
[assembly: EdmRelationshipAttribute("lastFMcacheModel", "FK_Track_0", "SimilarTrackList", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(LastFMentityModel.SimilarTrackList), "Track", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(LastFMentityModel.Track))]
[assembly: EdmRelationshipAttribute("lastFMcacheModel", "FK_TopTracks_0", "Track", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(LastFMentityModel.Track), "TopTracks", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(LastFMentityModel.TopTracks))]
[assembly: EdmRelationshipAttribute("lastFMcacheModel", "FK_TopTracks_1", "TopTracksList", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(LastFMentityModel.TopTracksList), "TopTracks", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(LastFMentityModel.TopTracks))]

#endregion

namespace LastFMentityModel
{
    #region Contexts
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    public partial class LastFMCacheModel : ObjectContext
    {
        #region Constructors
    
        /// <summary>
        /// Initializes a new LastFMCacheModel object using the connection string found in the 'LastFMCacheModel' section of the application configuration file.
        /// </summary>
        public LastFMCacheModel() : base("name=LastFMCacheModel", "LastFMCacheModel")
        {
            OnContextCreated();
        }
    
        /// <summary>
        /// Initialize a new LastFMCacheModel object.
        /// </summary>
        public LastFMCacheModel(string connectionString) : base(connectionString, "LastFMCacheModel")
        {
            OnContextCreated();
        }
    
        /// <summary>
        /// Initialize a new LastFMCacheModel object.
        /// </summary>
        public LastFMCacheModel(EntityConnection connection) : base(connection, "LastFMCacheModel")
        {
            OnContextCreated();
        }
    
        #endregion
    
        #region Partial Methods
    
        partial void OnContextCreated();
    
        #endregion
    
        #region ObjectSet Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Artist> Artist
        {
            get
            {
                if ((_Artist == null))
                {
                    _Artist = base.CreateObjectSet<Artist>("Artist");
                }
                return _Artist;
            }
        }
        private ObjectSet<Artist> _Artist;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<SimilarArtist> SimilarArtist
        {
            get
            {
                if ((_SimilarArtist == null))
                {
                    _SimilarArtist = base.CreateObjectSet<SimilarArtist>("SimilarArtist");
                }
                return _SimilarArtist;
            }
        }
        private ObjectSet<SimilarArtist> _SimilarArtist;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<SimilarArtistList> SimilarArtistList
        {
            get
            {
                if ((_SimilarArtistList == null))
                {
                    _SimilarArtistList = base.CreateObjectSet<SimilarArtistList>("SimilarArtistList");
                }
                return _SimilarArtistList;
            }
        }
        private ObjectSet<SimilarArtistList> _SimilarArtistList;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<SimilarTrack> SimilarTrack
        {
            get
            {
                if ((_SimilarTrack == null))
                {
                    _SimilarTrack = base.CreateObjectSet<SimilarTrack>("SimilarTrack");
                }
                return _SimilarTrack;
            }
        }
        private ObjectSet<SimilarTrack> _SimilarTrack;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<SimilarTrackList> SimilarTrackList
        {
            get
            {
                if ((_SimilarTrackList == null))
                {
                    _SimilarTrackList = base.CreateObjectSet<SimilarTrackList>("SimilarTrackList");
                }
                return _SimilarTrackList;
            }
        }
        private ObjectSet<SimilarTrackList> _SimilarTrackList;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<TopTracks> TopTracks
        {
            get
            {
                if ((_TopTracks == null))
                {
                    _TopTracks = base.CreateObjectSet<TopTracks>("TopTracks");
                }
                return _TopTracks;
            }
        }
        private ObjectSet<TopTracks> _TopTracks;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<TopTracksList> TopTracksList
        {
            get
            {
                if ((_TopTracksList == null))
                {
                    _TopTracksList = base.CreateObjectSet<TopTracksList>("TopTracksList");
                }
                return _TopTracksList;
            }
        }
        private ObjectSet<TopTracksList> _TopTracksList;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Track> Track
        {
            get
            {
                if ((_Track == null))
                {
                    _Track = base.CreateObjectSet<Track>("Track");
                }
                return _Track;
            }
        }
        private ObjectSet<Track> _Track;

        #endregion
        #region AddTo Methods
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Artist EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToArtist(Artist artist)
        {
            base.AddObject("Artist", artist);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the SimilarArtist EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToSimilarArtist(SimilarArtist similarArtist)
        {
            base.AddObject("SimilarArtist", similarArtist);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the SimilarArtistList EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToSimilarArtistList(SimilarArtistList similarArtistList)
        {
            base.AddObject("SimilarArtistList", similarArtistList);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the SimilarTrack EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToSimilarTrack(SimilarTrack similarTrack)
        {
            base.AddObject("SimilarTrack", similarTrack);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the SimilarTrackList EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToSimilarTrackList(SimilarTrackList similarTrackList)
        {
            base.AddObject("SimilarTrackList", similarTrackList);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the TopTracks EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToTopTracks(TopTracks topTracks)
        {
            base.AddObject("TopTracks", topTracks);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the TopTracksList EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToTopTracksList(TopTracksList topTracksList)
        {
            base.AddObject("TopTracksList", topTracksList);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Track EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToTrack(Track track)
        {
            base.AddObject("Track", track);
        }

        #endregion
    }
    

    #endregion
    
    #region Entities
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="lastFMcacheModel", Name="Artist")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Artist : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Artist object.
        /// </summary>
        /// <param name="artistID">Initial value of the ArtistID property.</param>
        /// <param name="fullArtist">Initial value of the FullArtist property.</param>
        /// <param name="lowercaseArtist">Initial value of the LowercaseArtist property.</param>
        public static Artist CreateArtist(global::System.Int64 artistID, global::System.String fullArtist, global::System.String lowercaseArtist)
        {
            Artist artist = new Artist();
            artist.ArtistID = artistID;
            artist.FullArtist = fullArtist;
            artist.LowercaseArtist = lowercaseArtist;
            return artist;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 ArtistID
        {
            get
            {
                return _ArtistID;
            }
            set
            {
                if (_ArtistID != value)
                {
                    OnArtistIDChanging(value);
                    ReportPropertyChanging("ArtistID");
                    _ArtistID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ArtistID");
                    OnArtistIDChanged();
                }
            }
        }
        private global::System.Int64 _ArtistID;
        partial void OnArtistIDChanging(global::System.Int64 value);
        partial void OnArtistIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String FullArtist
        {
            get
            {
                return _FullArtist;
            }
            set
            {
                OnFullArtistChanging(value);
                ReportPropertyChanging("FullArtist");
                _FullArtist = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("FullArtist");
                OnFullArtistChanged();
            }
        }
        private global::System.String _FullArtist;
        partial void OnFullArtistChanging(global::System.String value);
        partial void OnFullArtistChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String LowercaseArtist
        {
            get
            {
                return _LowercaseArtist;
            }
            set
            {
                OnLowercaseArtistChanging(value);
                ReportPropertyChanging("LowercaseArtist");
                _LowercaseArtist = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("LowercaseArtist");
                OnLowercaseArtistChanged();
            }
        }
        private global::System.String _LowercaseArtist;
        partial void OnLowercaseArtistChanging(global::System.String value);
        partial void OnLowercaseArtistChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("lastFMcacheModel", "FK_Artist_0", "TopTracksList")]
        public TopTracksList CurrentTopTracksList
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<TopTracksList>("lastFMcacheModel.FK_Artist_0", "TopTracksList").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<TopTracksList>("lastFMcacheModel.FK_Artist_0", "TopTracksList").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<TopTracksList> CurrentTopTracksListReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<TopTracksList>("lastFMcacheModel.FK_Artist_0", "TopTracksList");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<TopTracksList>("lastFMcacheModel.FK_Artist_0", "TopTracksList", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("lastFMcacheModel", "FK_Artist_1", "SimilarArtistList")]
        public SimilarArtistList CurrentSimilarArtistList
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<SimilarArtistList>("lastFMcacheModel.FK_Artist_1", "SimilarArtistList").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<SimilarArtistList>("lastFMcacheModel.FK_Artist_1", "SimilarArtistList").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<SimilarArtistList> CurrentSimilarArtistListReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<SimilarArtistList>("lastFMcacheModel.FK_Artist_1", "SimilarArtistList");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<SimilarArtistList>("lastFMcacheModel.FK_Artist_1", "SimilarArtistList", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("lastFMcacheModel", "FK_Artist_2", "Artist1")]
        public EntityCollection<Artist> BadAlternates
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Artist>("lastFMcacheModel.FK_Artist_2", "Artist1");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Artist>("lastFMcacheModel.FK_Artist_2", "Artist1", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("lastFMcacheModel", "FK_Artist_2", "Artist")]
        public Artist CorrectAlternate
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Artist>("lastFMcacheModel.FK_Artist_2", "Artist").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Artist>("lastFMcacheModel.FK_Artist_2", "Artist").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Artist> CorrectAlternateReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Artist>("lastFMcacheModel.FK_Artist_2", "Artist");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Artist>("lastFMcacheModel.FK_Artist_2", "Artist", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("lastFMcacheModel", "FK_SimilarArtist_1", "SimilarArtist")]
        public EntityCollection<SimilarArtist> RefSimilarArtistOf
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<SimilarArtist>("lastFMcacheModel.FK_SimilarArtist_1", "SimilarArtist");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<SimilarArtist>("lastFMcacheModel.FK_SimilarArtist_1", "SimilarArtist", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("lastFMcacheModel", "FK_SimilarArtistList_0", "SimilarArtistList")]
        public EntityCollection<SimilarArtistList> SimilarArtistLists
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<SimilarArtistList>("lastFMcacheModel.FK_SimilarArtistList_0", "SimilarArtistList");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<SimilarArtistList>("lastFMcacheModel.FK_SimilarArtistList_0", "SimilarArtistList", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("lastFMcacheModel", "FK_TopTracksList_0", "TopTracksList")]
        public EntityCollection<TopTracksList> TopTracksLists
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<TopTracksList>("lastFMcacheModel.FK_TopTracksList_0", "TopTracksList");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<TopTracksList>("lastFMcacheModel.FK_TopTracksList_0", "TopTracksList", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("lastFMcacheModel", "FK_Track_1", "Track")]
        public EntityCollection<Track> Tracks
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Track>("lastFMcacheModel.FK_Track_1", "Track");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Track>("lastFMcacheModel.FK_Track_1", "Track", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="lastFMcacheModel", Name="SimilarArtist")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class SimilarArtist : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new SimilarArtist object.
        /// </summary>
        /// <param name="similarArtistID">Initial value of the SimilarArtistID property.</param>
        /// <param name="rating">Initial value of the Rating property.</param>
        public static SimilarArtist CreateSimilarArtist(global::System.Int64 similarArtistID, global::System.Single rating)
        {
            SimilarArtist similarArtist = new SimilarArtist();
            similarArtist.SimilarArtistID = similarArtistID;
            similarArtist.Rating = rating;
            return similarArtist;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 SimilarArtistID
        {
            get
            {
                return _SimilarArtistID;
            }
            set
            {
                if (_SimilarArtistID != value)
                {
                    OnSimilarArtistIDChanging(value);
                    ReportPropertyChanging("SimilarArtistID");
                    _SimilarArtistID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("SimilarArtistID");
                    OnSimilarArtistIDChanged();
                }
            }
        }
        private global::System.Int64 _SimilarArtistID;
        partial void OnSimilarArtistIDChanging(global::System.Int64 value);
        partial void OnSimilarArtistIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Single Rating
        {
            get
            {
                return _Rating;
            }
            set
            {
                OnRatingChanging(value);
                ReportPropertyChanging("Rating");
                _Rating = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Rating");
                OnRatingChanged();
            }
        }
        private global::System.Single _Rating;
        partial void OnRatingChanging(global::System.Single value);
        partial void OnRatingChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("lastFMcacheModel", "FK_SimilarArtist_1", "Artist")]
        public Artist SimilarToArtist
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Artist>("lastFMcacheModel.FK_SimilarArtist_1", "Artist").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Artist>("lastFMcacheModel.FK_SimilarArtist_1", "Artist").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Artist> SimilarToArtistReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Artist>("lastFMcacheModel.FK_SimilarArtist_1", "Artist");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Artist>("lastFMcacheModel.FK_SimilarArtist_1", "Artist", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("lastFMcacheModel", "FK_SimilarArtist_0", "SimilarArtistList")]
        public SimilarArtistList InList
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<SimilarArtistList>("lastFMcacheModel.FK_SimilarArtist_0", "SimilarArtistList").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<SimilarArtistList>("lastFMcacheModel.FK_SimilarArtist_0", "SimilarArtistList").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<SimilarArtistList> InListReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<SimilarArtistList>("lastFMcacheModel.FK_SimilarArtist_0", "SimilarArtistList");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<SimilarArtistList>("lastFMcacheModel.FK_SimilarArtist_0", "SimilarArtistList", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="lastFMcacheModel", Name="SimilarArtistList")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class SimilarArtistList : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new SimilarArtistList object.
        /// </summary>
        /// <param name="listID">Initial value of the ListID property.</param>
        /// <param name="lookupTimestamp">Initial value of the LookupTimestamp property.</param>
        public static SimilarArtistList CreateSimilarArtistList(global::System.Int64 listID, global::System.Int64 lookupTimestamp)
        {
            SimilarArtistList similarArtistList = new SimilarArtistList();
            similarArtistList.ListID = listID;
            similarArtistList.LookupTimestamp = lookupTimestamp;
            return similarArtistList;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 ListID
        {
            get
            {
                return _ListID;
            }
            set
            {
                if (_ListID != value)
                {
                    OnListIDChanging(value);
                    ReportPropertyChanging("ListID");
                    _ListID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ListID");
                    OnListIDChanged();
                }
            }
        }
        private global::System.Int64 _ListID;
        partial void OnListIDChanging(global::System.Int64 value);
        partial void OnListIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 LookupTimestamp
        {
            get
            {
                return _LookupTimestamp;
            }
            set
            {
                OnLookupTimestampChanging(value);
                ReportPropertyChanging("LookupTimestamp");
                _LookupTimestamp = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("LookupTimestamp");
                OnLookupTimestampChanged();
            }
        }
        private global::System.Int64 _LookupTimestamp;
        partial void OnLookupTimestampChanging(global::System.Int64 value);
        partial void OnLookupTimestampChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int64> StatusCode
        {
            get
            {
                return _StatusCode;
            }
            set
            {
                OnStatusCodeChanging(value);
                ReportPropertyChanging("StatusCode");
                _StatusCode = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("StatusCode");
                OnStatusCodeChanged();
            }
        }
        private Nullable<global::System.Int64> _StatusCode;
        partial void OnStatusCodeChanging(Nullable<global::System.Int64> value);
        partial void OnStatusCodeChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("lastFMcacheModel", "FK_Artist_1", "Artist")]
        public EntityCollection<Artist> IsCurrentOf
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Artist>("lastFMcacheModel.FK_Artist_1", "Artist");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Artist>("lastFMcacheModel.FK_Artist_1", "Artist", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("lastFMcacheModel", "FK_SimilarArtistList_0", "Artist")]
        public Artist OfArtist
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Artist>("lastFMcacheModel.FK_SimilarArtistList_0", "Artist").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Artist>("lastFMcacheModel.FK_SimilarArtistList_0", "Artist").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Artist> OfArtistReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Artist>("lastFMcacheModel.FK_SimilarArtistList_0", "Artist");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Artist>("lastFMcacheModel.FK_SimilarArtistList_0", "Artist", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("lastFMcacheModel", "FK_SimilarArtist_0", "SimilarArtist")]
        public EntityCollection<SimilarArtist> SimilarArtists
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<SimilarArtist>("lastFMcacheModel.FK_SimilarArtist_0", "SimilarArtist");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<SimilarArtist>("lastFMcacheModel.FK_SimilarArtist_0", "SimilarArtist", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="lastFMcacheModel", Name="SimilarTrack")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class SimilarTrack : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new SimilarTrack object.
        /// </summary>
        /// <param name="similarTrackID">Initial value of the SimilarTrackID property.</param>
        /// <param name="rating">Initial value of the Rating property.</param>
        public static SimilarTrack CreateSimilarTrack(global::System.Int64 similarTrackID, global::System.Single rating)
        {
            SimilarTrack similarTrack = new SimilarTrack();
            similarTrack.SimilarTrackID = similarTrackID;
            similarTrack.Rating = rating;
            return similarTrack;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 SimilarTrackID
        {
            get
            {
                return _SimilarTrackID;
            }
            set
            {
                if (_SimilarTrackID != value)
                {
                    OnSimilarTrackIDChanging(value);
                    ReportPropertyChanging("SimilarTrackID");
                    _SimilarTrackID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("SimilarTrackID");
                    OnSimilarTrackIDChanged();
                }
            }
        }
        private global::System.Int64 _SimilarTrackID;
        partial void OnSimilarTrackIDChanging(global::System.Int64 value);
        partial void OnSimilarTrackIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Single Rating
        {
            get
            {
                return _Rating;
            }
            set
            {
                OnRatingChanging(value);
                ReportPropertyChanging("Rating");
                _Rating = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Rating");
                OnRatingChanged();
            }
        }
        private global::System.Single _Rating;
        partial void OnRatingChanging(global::System.Single value);
        partial void OnRatingChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("lastFMcacheModel", "FK_SimilarTrack_0", "Track")]
        public Track SimilarToTrack
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Track>("lastFMcacheModel.FK_SimilarTrack_0", "Track").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Track>("lastFMcacheModel.FK_SimilarTrack_0", "Track").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Track> SimilarToTrackReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Track>("lastFMcacheModel.FK_SimilarTrack_0", "Track");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Track>("lastFMcacheModel.FK_SimilarTrack_0", "Track", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("lastFMcacheModel", "FK_SimilarTrack_1", "SimilarTrackList")]
        public SimilarTrackList InList
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<SimilarTrackList>("lastFMcacheModel.FK_SimilarTrack_1", "SimilarTrackList").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<SimilarTrackList>("lastFMcacheModel.FK_SimilarTrack_1", "SimilarTrackList").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<SimilarTrackList> InListReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<SimilarTrackList>("lastFMcacheModel.FK_SimilarTrack_1", "SimilarTrackList");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<SimilarTrackList>("lastFMcacheModel.FK_SimilarTrack_1", "SimilarTrackList", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="lastFMcacheModel", Name="SimilarTrackList")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class SimilarTrackList : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new SimilarTrackList object.
        /// </summary>
        /// <param name="listID">Initial value of the ListID property.</param>
        /// <param name="lookupTimestamp">Initial value of the LookupTimestamp property.</param>
        public static SimilarTrackList CreateSimilarTrackList(global::System.Int64 listID, global::System.Int64 lookupTimestamp)
        {
            SimilarTrackList similarTrackList = new SimilarTrackList();
            similarTrackList.ListID = listID;
            similarTrackList.LookupTimestamp = lookupTimestamp;
            return similarTrackList;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 ListID
        {
            get
            {
                return _ListID;
            }
            set
            {
                if (_ListID != value)
                {
                    OnListIDChanging(value);
                    ReportPropertyChanging("ListID");
                    _ListID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ListID");
                    OnListIDChanged();
                }
            }
        }
        private global::System.Int64 _ListID;
        partial void OnListIDChanging(global::System.Int64 value);
        partial void OnListIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 LookupTimestamp
        {
            get
            {
                return _LookupTimestamp;
            }
            set
            {
                OnLookupTimestampChanging(value);
                ReportPropertyChanging("LookupTimestamp");
                _LookupTimestamp = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("LookupTimestamp");
                OnLookupTimestampChanged();
            }
        }
        private global::System.Int64 _LookupTimestamp;
        partial void OnLookupTimestampChanging(global::System.Int64 value);
        partial void OnLookupTimestampChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int64> StatusCode
        {
            get
            {
                return _StatusCode;
            }
            set
            {
                OnStatusCodeChanging(value);
                ReportPropertyChanging("StatusCode");
                _StatusCode = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("StatusCode");
                OnStatusCodeChanged();
            }
        }
        private Nullable<global::System.Int64> _StatusCode;
        partial void OnStatusCodeChanging(Nullable<global::System.Int64> value);
        partial void OnStatusCodeChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("lastFMcacheModel", "FK_SimilarTrack_1", "SimilarTrack")]
        public EntityCollection<SimilarTrack> SimilarTracks
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<SimilarTrack>("lastFMcacheModel.FK_SimilarTrack_1", "SimilarTrack");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<SimilarTrack>("lastFMcacheModel.FK_SimilarTrack_1", "SimilarTrack", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("lastFMcacheModel", "FK_SimilarTrackList_0", "Track")]
        public Track Track
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Track>("lastFMcacheModel.FK_SimilarTrackList_0", "Track").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Track>("lastFMcacheModel.FK_SimilarTrackList_0", "Track").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Track> TrackReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Track>("lastFMcacheModel.FK_SimilarTrackList_0", "Track");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Track>("lastFMcacheModel.FK_SimilarTrackList_0", "Track", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("lastFMcacheModel", "FK_Track_0", "Track")]
        public EntityCollection<Track> IsCurrentOf
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Track>("lastFMcacheModel.FK_Track_0", "Track");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Track>("lastFMcacheModel.FK_Track_0", "Track", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="lastFMcacheModel", Name="TopTracks")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class TopTracks : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new TopTracks object.
        /// </summary>
        /// <param name="topTrackID">Initial value of the TopTrackID property.</param>
        /// <param name="reach">Initial value of the Reach property.</param>
        public static TopTracks CreateTopTracks(global::System.Int64 topTrackID, global::System.Int64 reach)
        {
            TopTracks topTracks = new TopTracks();
            topTracks.TopTrackID = topTrackID;
            topTracks.Reach = reach;
            return topTracks;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 TopTrackID
        {
            get
            {
                return _TopTrackID;
            }
            set
            {
                if (_TopTrackID != value)
                {
                    OnTopTrackIDChanging(value);
                    ReportPropertyChanging("TopTrackID");
                    _TopTrackID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("TopTrackID");
                    OnTopTrackIDChanged();
                }
            }
        }
        private global::System.Int64 _TopTrackID;
        partial void OnTopTrackIDChanging(global::System.Int64 value);
        partial void OnTopTrackIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 Reach
        {
            get
            {
                return _Reach;
            }
            set
            {
                OnReachChanging(value);
                ReportPropertyChanging("Reach");
                _Reach = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Reach");
                OnReachChanged();
            }
        }
        private global::System.Int64 _Reach;
        partial void OnReachChanging(global::System.Int64 value);
        partial void OnReachChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("lastFMcacheModel", "FK_TopTracks_0", "Track")]
        public Track Track
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Track>("lastFMcacheModel.FK_TopTracks_0", "Track").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Track>("lastFMcacheModel.FK_TopTracks_0", "Track").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Track> TrackReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Track>("lastFMcacheModel.FK_TopTracks_0", "Track");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Track>("lastFMcacheModel.FK_TopTracks_0", "Track", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("lastFMcacheModel", "FK_TopTracks_1", "TopTracksList")]
        public TopTracksList InList
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<TopTracksList>("lastFMcacheModel.FK_TopTracks_1", "TopTracksList").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<TopTracksList>("lastFMcacheModel.FK_TopTracks_1", "TopTracksList").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<TopTracksList> InListReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<TopTracksList>("lastFMcacheModel.FK_TopTracks_1", "TopTracksList");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<TopTracksList>("lastFMcacheModel.FK_TopTracks_1", "TopTracksList", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="lastFMcacheModel", Name="TopTracksList")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class TopTracksList : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new TopTracksList object.
        /// </summary>
        /// <param name="listID">Initial value of the ListID property.</param>
        /// <param name="lookupTimestamp">Initial value of the LookupTimestamp property.</param>
        public static TopTracksList CreateTopTracksList(global::System.Int64 listID, global::System.Int64 lookupTimestamp)
        {
            TopTracksList topTracksList = new TopTracksList();
            topTracksList.ListID = listID;
            topTracksList.LookupTimestamp = lookupTimestamp;
            return topTracksList;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 ListID
        {
            get
            {
                return _ListID;
            }
            set
            {
                if (_ListID != value)
                {
                    OnListIDChanging(value);
                    ReportPropertyChanging("ListID");
                    _ListID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ListID");
                    OnListIDChanged();
                }
            }
        }
        private global::System.Int64 _ListID;
        partial void OnListIDChanging(global::System.Int64 value);
        partial void OnListIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 LookupTimestamp
        {
            get
            {
                return _LookupTimestamp;
            }
            set
            {
                OnLookupTimestampChanging(value);
                ReportPropertyChanging("LookupTimestamp");
                _LookupTimestamp = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("LookupTimestamp");
                OnLookupTimestampChanged();
            }
        }
        private global::System.Int64 _LookupTimestamp;
        partial void OnLookupTimestampChanging(global::System.Int64 value);
        partial void OnLookupTimestampChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int64> StatusCode
        {
            get
            {
                return _StatusCode;
            }
            set
            {
                OnStatusCodeChanging(value);
                ReportPropertyChanging("StatusCode");
                _StatusCode = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("StatusCode");
                OnStatusCodeChanged();
            }
        }
        private Nullable<global::System.Int64> _StatusCode;
        partial void OnStatusCodeChanging(Nullable<global::System.Int64> value);
        partial void OnStatusCodeChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("lastFMcacheModel", "FK_Artist_0", "Artist")]
        public EntityCollection<Artist> IsCurrentOf
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Artist>("lastFMcacheModel.FK_Artist_0", "Artist");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Artist>("lastFMcacheModel.FK_Artist_0", "Artist", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("lastFMcacheModel", "FK_TopTracksList_0", "Artist")]
        public Artist OfArtist
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Artist>("lastFMcacheModel.FK_TopTracksList_0", "Artist").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Artist>("lastFMcacheModel.FK_TopTracksList_0", "Artist").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Artist> OfArtistReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Artist>("lastFMcacheModel.FK_TopTracksList_0", "Artist");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Artist>("lastFMcacheModel.FK_TopTracksList_0", "Artist", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("lastFMcacheModel", "FK_TopTracks_1", "TopTracks")]
        public EntityCollection<TopTracks> TopTracks
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<TopTracks>("lastFMcacheModel.FK_TopTracks_1", "TopTracks");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<TopTracks>("lastFMcacheModel.FK_TopTracks_1", "TopTracks", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="lastFMcacheModel", Name="Track")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Track : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Track object.
        /// </summary>
        /// <param name="trackID">Initial value of the TrackID property.</param>
        /// <param name="fullTitle">Initial value of the FullTitle property.</param>
        /// <param name="lowercaseTitle">Initial value of the LowercaseTitle property.</param>
        public static Track CreateTrack(global::System.Int64 trackID, global::System.String fullTitle, global::System.String lowercaseTitle)
        {
            Track track = new Track();
            track.TrackID = trackID;
            track.FullTitle = fullTitle;
            track.LowercaseTitle = lowercaseTitle;
            return track;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 TrackID
        {
            get
            {
                return _TrackID;
            }
            set
            {
                if (_TrackID != value)
                {
                    OnTrackIDChanging(value);
                    ReportPropertyChanging("TrackID");
                    _TrackID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("TrackID");
                    OnTrackIDChanged();
                }
            }
        }
        private global::System.Int64 _TrackID;
        partial void OnTrackIDChanging(global::System.Int64 value);
        partial void OnTrackIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String FullTitle
        {
            get
            {
                return _FullTitle;
            }
            set
            {
                OnFullTitleChanging(value);
                ReportPropertyChanging("FullTitle");
                _FullTitle = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("FullTitle");
                OnFullTitleChanged();
            }
        }
        private global::System.String _FullTitle;
        partial void OnFullTitleChanging(global::System.String value);
        partial void OnFullTitleChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String LowercaseTitle
        {
            get
            {
                return _LowercaseTitle;
            }
            set
            {
                OnLowercaseTitleChanging(value);
                ReportPropertyChanging("LowercaseTitle");
                _LowercaseTitle = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("LowercaseTitle");
                OnLowercaseTitleChanged();
            }
        }
        private global::System.String _LowercaseTitle;
        partial void OnLowercaseTitleChanging(global::System.String value);
        partial void OnLowercaseTitleChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("lastFMcacheModel", "FK_Track_1", "Artist")]
        public Artist Artist
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Artist>("lastFMcacheModel.FK_Track_1", "Artist").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Artist>("lastFMcacheModel.FK_Track_1", "Artist").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Artist> ArtistReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Artist>("lastFMcacheModel.FK_Track_1", "Artist");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Artist>("lastFMcacheModel.FK_Track_1", "Artist", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("lastFMcacheModel", "FK_SimilarTrack_0", "SimilarTrack")]
        public EntityCollection<SimilarTrack> RefSimilarTrackOf
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<SimilarTrack>("lastFMcacheModel.FK_SimilarTrack_0", "SimilarTrack");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<SimilarTrack>("lastFMcacheModel.FK_SimilarTrack_0", "SimilarTrack", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("lastFMcacheModel", "FK_SimilarTrackList_0", "SimilarTrackList")]
        public EntityCollection<SimilarTrackList> SimilarTrackLists
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<SimilarTrackList>("lastFMcacheModel.FK_SimilarTrackList_0", "SimilarTrackList");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<SimilarTrackList>("lastFMcacheModel.FK_SimilarTrackList_0", "SimilarTrackList", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("lastFMcacheModel", "FK_Track_0", "SimilarTrackList")]
        public SimilarTrackList CurrentSimilarTrackList
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<SimilarTrackList>("lastFMcacheModel.FK_Track_0", "SimilarTrackList").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<SimilarTrackList>("lastFMcacheModel.FK_Track_0", "SimilarTrackList").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<SimilarTrackList> CurrentSimilarTrackListReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<SimilarTrackList>("lastFMcacheModel.FK_Track_0", "SimilarTrackList");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<SimilarTrackList>("lastFMcacheModel.FK_Track_0", "SimilarTrackList", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("lastFMcacheModel", "FK_TopTracks_0", "TopTracks")]
        public EntityCollection<TopTracks> TopTracks
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<TopTracks>("lastFMcacheModel.FK_TopTracks_0", "TopTracks");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<TopTracks>("lastFMcacheModel.FK_TopTracks_0", "TopTracks", value);
                }
            }
        }

        #endregion
    }

    #endregion
    
}
