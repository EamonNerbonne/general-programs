<UserControl x:Class="LvqGui.CreateLvqModel"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             mc:Ignorable="d" 
             d:DesignHeight="650" d:DesignWidth="300">
    <UserControl.Resources>
        <Style TargetType="{x:Type Label}" BasedOn="{StaticResource PropLabel}"/>
        <Style TargetType="{x:Type TextBox}" BasedOn="{StaticResource PropBox}"/>
        <Style TargetType="{x:Type ComboBox}" BasedOn="{StaticResource PropBox}"/>
        <Style TargetType="{x:Type Button}" BasedOn="{StaticResource PropButton}"/>
        <Style TargetType="{x:Type CheckBox}" BasedOn="{StaticResource PropBox}">
            <Setter Property="VerticalAlignment" Value="Center"/>
        </Style>
    </UserControl.Resources>
    <Grid>
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="Auto" />
            <ColumnDefinition Width="121.353*" />
        </Grid.ColumnDefinitions>
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto" />
            <RowDefinition Height="Auto" />
            <RowDefinition Height="Auto" />
            <RowDefinition Height="Auto" />
            <RowDefinition Height="Auto"/>
            <RowDefinition Height="Auto"/>
            <RowDefinition Height="Auto"/>
            <RowDefinition Height="Auto" />
            <RowDefinition Height="Auto" />
            <RowDefinition Height="Auto" />
            <RowDefinition Height="Auto" />
            <RowDefinition Height="Auto" />
            <RowDefinition Height="Auto" />
            <RowDefinition Height="Auto" />
            <RowDefinition Height="Auto" />
            <RowDefinition Height="Auto" />
            <RowDefinition Height="Auto" />
            <RowDefinition Height="Auto" />
            <RowDefinition Height="Auto" />
            <RowDefinition Height="Auto" />
            <RowDefinition Height="Auto" />
            <RowDefinition Height="Auto" />
            <RowDefinition Height="Auto" />
            <RowDefinition Height="Auto" />
            <RowDefinition Height="Auto" />
            <RowDefinition Height="Auto" />
            <RowDefinition Height="Auto" />
            <RowDefinition Height="Auto" />
            <RowDefinition Height="Auto" />
            <RowDefinition Height="Auto" />
            <RowDefinition Height="Auto" />
            <RowDefinition Height="Auto" />
            <RowDefinition Height="Auto" />
            <RowDefinition Height="Auto" />
        </Grid.RowDefinitions>
        <Label Grid.Row="0">For Dataset</Label>
        <ComboBox Grid.Row="0" Grid.Column="1" ItemsSource="{Binding Owner.Datasets}" SelectedItem="{Binding ForDataset}">
            <ComboBox.ItemTemplate>
                <DataTemplate>
                    <TextBlock Text="{Binding DatasetLabel}"/>
                </DataTemplate>
            </ComboBox.ItemTemplate>
        </ComboBox>
        <Label Grid.Row="2">Model Type</Label>
        <ComboBox Grid.Row="2"  Grid.Column="1"  Name="modelType" SelectedItem="{Binding ModelType, Mode=TwoWay, ValidatesOnExceptions=True}" ItemsSource="{Binding  RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type UserControl} }, Path=ModelTypes}"/>
        <Label Grid.Row="3">Internal Dimensionality</Label>
        <TextBox Grid.Row="3" Grid.Column="1" Text="{Binding Dimensionality, Mode=TwoWay, ValidatesOnExceptions=True}"/>
        <Label Grid.Row="4">Prototypes per class</Label>
        <TextBox Grid.Row="4" Grid.Column="1" Text="{Binding PrototypesPerClass, Mode=TwoWay, ValidatesOnExceptions=True}" />
        <Label Grid.Row="5">Random initial projection</Label>
        <CheckBox Grid.Row="5" Grid.Column="1"  IsChecked="{Binding RandomInitialProjection, Mode= TwoWay, ValidatesOnExceptions=True}"/>
        <Label Grid.Row="6">Random initial boundaries (g2m, ggm)</Label>
        <CheckBox Grid.Row="6" Grid.Column="1"  IsChecked="{Binding RandomInitialBorders, Mode= TwoWay, ValidatesOnExceptions=True}"/>
        <Label Grid.Row="7">Normalize projection each epoch</Label>
        <CheckBox Grid.Row="7" Grid.Column="1"  IsChecked="{Binding NormalizeProjection, Mode= TwoWay, ValidatesOnExceptions=True}"/>
        <Label Grid.Row="8">Normalize boundaries each epoch (g2m)</Label>
        <CheckBox Grid.Row="8" Grid.Column="1"  IsChecked="{Binding NormalizeBoundaries, Mode= TwoWay, ValidatesOnExceptions=True}"/>
        <Label Grid.Row="9">Globally normalize (lgm, g2m, ggm)</Label>
        <CheckBox Grid.Row="9" Grid.Column="1"  IsChecked="{Binding GloballyNormalize, Mode= TwoWay, ValidatesOnExceptions=True}"/>
        <Label Grid.Row="10">NG-inspired updates (gsm, g2m, ggm)</Label>
        <CheckBox Grid.Row="10" Grid.Column="1"  IsChecked="{Binding NgUpdateProtos, Mode= TwoWay, ValidatesOnExceptions=True}"/>
        <Label Grid.Row="11">NG prototype initialization</Label>
        <StackPanel Orientation="Horizontal" Grid.Row="11" Grid.Column="1" >
        <CheckBox  IsChecked="{Binding NgInitializeProtos, Mode= TwoWay, ValidatesOnExceptions=True}"/>
            <Label>... and spread P: </Label>
            <CheckBox  IsChecked="{Binding ProjOptimalInit, Mode= TwoWay, ValidatesOnExceptions=True}"/>
            <Label>... and init B:</Label>
            <CheckBox  IsChecked="{Binding BLocalInit, Mode= TwoWay, ValidatesOnExceptions=True}"/>
        </StackPanel>
        <Label Grid.Row="12">Don't use B for point update (g2m)</Label>
        <CheckBox Grid.Row="12" Grid.Column="1"  IsChecked="{Binding UpdatePointsWithoutB, Mode= TwoWay, ValidatesOnExceptions=True}"/>
        <Label Grid.Row="13">Slow start LrBad</Label>
        <CheckBox Grid.Row="13" Grid.Column="1"  IsChecked="{Binding SlowStartLrBad, Mode= TwoWay, ValidatesOnExceptions=True}"/>

        <Label Grid.Row="14">LR0</Label>
        <TextBox Grid.Row="14" Grid.Column="1" Text="{Binding LR0, Mode=TwoWay, ValidatesOnExceptions=True}"/>


        <Label Grid.Row="15">LrScaleP</Label>
        <TextBox Grid.Row="15" Grid.Column="1" Text="{Binding LrScaleP, Mode=TwoWay, ValidatesOnExceptions=True}"/>

        <Label Grid.Row="16">LrScaleB</Label>
        <TextBox Grid.Row="16" Grid.Column="1" Text="{Binding LrScaleB, Mode=TwoWay, ValidatesOnExceptions=True}"/>

        <Label Grid.Row="17">LrScaleBad</Label>
        <TextBox Grid.Row="17" Grid.Column="1" Text="{Binding LrScaleBad, Mode=TwoWay, ValidatesOnExceptions=True}"/>


        <Button Grid.Row="20" Content="Reset Initialization Seed" Click="ReseedParam" />
        <TextBox Grid.Row="20" Grid.Column="1" Text="{Binding ParamsSeed, Mode=TwoWay, ValidatesOnExceptions=True, Converter={StaticResource hexConverter}}"  />
        <Button Grid.Row="21" Content="Reset Iteration Seed" Click="ReseedInst" />
        <TextBox Grid.Row="21" Grid.Column="1" Text="{Binding InstanceSeed, Mode=TwoWay, ValidatesOnExceptions=True, Converter={StaticResource hexConverter}}" />

        <Label Grid.Row="25">Parallel models</Label>
        <TextBox Grid.Row="25" Grid.Column="1" Text="{Binding ParallelModels, Mode=TwoWay, ValidatesOnExceptions=True}" />
        <Label Grid.Row="26">Fold offset</Label>
        <TextBox Grid.Row="26" Grid.Column="1" Text="{Binding FoldOffset, Mode=TwoWay, ValidatesOnExceptions=True}" />
        <Label Grid.Row="28">Track Projection Quality (slow)</Label>
        <CheckBox Grid.Row="28" Grid.Column="1"  IsChecked="{Binding TrackProjectionQuality, Mode= TwoWay, ValidatesOnExceptions=True}"/>
        
        <Label Grid.Row="29">Shorthand</Label>
        <TextBox  Grid.Row="29" Grid.Column="1" Text="{Binding Shorthand, Mode=TwoWay, ValidatesOnExceptions=True, UpdateSourceTrigger=PropertyChanged}" />        <!--, UpdateSourceTrigger=PropertyChanged-->

        <StackPanel Orientation="Horizontal" Grid.Row="30" Grid.ColumnSpan="2" FlowDirection="RightToLeft">
            <Button Click="InitializeModel" >Initialize Model</Button>
            <Button Click="OptimizeOrCreate"  Content="{Binding OptimizeButtonText, Mode=OneWay}"/>
            <Button Click="OptimizeAllOrCreateAll" Content="{Binding OptimizeAllButtonText, Mode=OneWay}"/>
        </StackPanel>
        <TextBlock VerticalAlignment="Center" Grid.Row="31" Grid.ColumnSpan="2" HorizontalAlignment="Right">
            Optimize LR done: <Run Text="{Binding HasOptimizedLr, Mode=OneWay}"/>
            Optimize LR All done: <Run Text="{Binding HasOptimizedLrAll, Mode=OneWay}"/>

        </TextBlock>
        <TextBlock Grid.Row="32" Grid.ColumnSpan="2" Text="{Binding ShorthandErrors, Mode=OneWay}" HorizontalAlignment="Left" TextWrapping="Wrap" />
    </Grid>
</UserControl>
